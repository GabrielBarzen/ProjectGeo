import{s as b,e as _,c as v,g as R,w as p,i as T,n as m,d,v as E,h as V,j as z,l as j,m as k,P as I,A as P,Q as U,y as C,R as H}from"../chunks/scheduler.C5XkXVb-.js";import{S as y,i as w,t as f,g as J,a as h,c as N,f as $,b as D,d as S,m as A,e as M}from"../chunks/index.3JaOz61e.js";import{p as q,R as x,L as g}from"../chunks/AdminControls.svelte_svelte_type_style_lang.BP3ZksxJ.js";/* empty css                    */const Q="/api/v1/game/user/location";async function B(s,t){const o={y:s,x:t};return await fetch(`${Q}`,{body:JSON.stringify(o),method:"POST",headers:{"Content-Type":"application/json"}})}function F(s){let t,o='<div class="w-4/12"><div class="w-full"><button class="btn-primary">This be button</button></div></div>';return{c(){t=_("div"),t.innerHTML=o,this.h()},l(a){t=v(a,"DIV",{id:!0,class:!0,"data-svelte-h":!0}),R(t)!=="svelte-1vhamc0"&&(t.innerHTML=o),this.h()},h(){p(t,"id","controls"),p(t,"class","controlsDiv svelte-1iougsp")},m(a,i){T(a,t,i)},p:m,i:m,o:m,d(a){a&&d(t)}}}function G(s,t,o){let{map:a}=t;E(()=>{console.log("starting map onclick events for:"),console.log(a),a==null||a.on("click",e=>n(e))});var i=[];async function n(e){console.log("clicked"),i.forEach(u=>u.clear()),i=[];var r=await(await B(e.latlng.lat,e.latlng.lng)).json(),l=q(r);l.forEach(u=>{i.push(new x(u))}),i.forEach(u=>u.renderTo(a))}return s.$$set=e=>{"map"in e&&o(0,a=e.map)},[a]}class K extends y{constructor(t){super(),w(this,t,G,F,b,{map:0})}}function L(s){let t,o,a;function i(e){s[5](e)}let n={};return s[0]!==void 0&&(n.map=s[0]),t=new K({props:n}),C.push(()=>$(t,"map",i)),{c(){D(t.$$.fragment)},l(e){S(t.$$.fragment,e)},m(e,r){A(t,e,r),a=!0},p(e,r){const l={};!o&&r&1&&(o=!0,l.map=e[0],H(()=>o=!1)),t.$set(l)},i(e){a||(f(t.$$.fragment,e),a=!0)},o(e){h(t.$$.fragment,e),a=!1},d(e){M(t,e)}}}function W(s){let t,o,a,i,n=s[2]&&L(s);return{c(){t=_("div"),n&&n.c(),o=V(),a=_("div"),this.h()},l(e){t=v(e,"DIV",{id:!0,class:!0});var r=z(t);n&&n.l(r),o=j(r),a=v(r,"DIV",{id:!0,class:!0}),z(a).forEach(d),r.forEach(d),this.h()},h(){p(a,"id","map"),p(a,"class","absolute left-0 top-0 size-full z-0"),p(t,"id","map-container"),p(t,"class","relative size-full")},m(e,r){T(e,t,r),n&&n.m(t,null),k(t,o),k(t,a),s[6](a),i=!0},p(e,[r]){e[2]?n?(n.p(e,r),r&4&&f(n,1)):(n=L(e),n.c(),f(n,1),n.m(t,o)):n&&(J(),h(n,1,1,()=>{n=null}),N())},i(e){i||(f(n),i=!0)},o(e){h(n),i=!1},d(e){e&&d(t),n&&n.d(),s[6](null)}}}function X(s,t,o){let{view:a=[56.04673,12.69437]}=t,{zoom:i=14}=t;const n=I();let e,r;E(()=>{o(0,e=g.map(r,{zoomControl:!1}).on("zoom",c=>n("zoom",c)).on("popupopen",async c=>{await P(),c.popup.update()})),g.tileLayer("https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",{attribution:'&copy;<a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>,&copy;<a href="https://carto.com/attributions" target="_blank">CARTO</a>'}).addTo(e),g.control.zoom({position:"topright"}).addTo(e)}),U(()=>{e==null||e.remove(),o(0,e=void 0)});var l=!1;function u(c){e=c,o(0,e)}function O(c){C[c?"unshift":"push"](()=>{r=c,o(1,r)})}return s.$$set=c=>{"view"in c&&o(3,a=c.view),"zoom"in c&&o(4,i=c.zoom)},s.$$.update=()=>{s.$$.dirty&25&&e&&(e.setView(a,i),o(2,l=!0))},[e,r,l,a,i,u,O]}class Y extends y{constructor(t){super(),w(this,t,X,W,b,{view:3,zoom:4})}}function Z(s){let t,o;return t=new Y({}),{c(){D(t.$$.fragment)},l(a){S(t.$$.fragment,a)},m(a,i){A(t,a,i),o=!0},p:m,i(a){o||(f(t.$$.fragment,a),o=!0)},o(a){h(t.$$.fragment,a),o=!1},d(a){M(t,a)}}}class nt extends y{constructor(t){super(),w(this,t,null,Z,b,{})}}export{nt as component};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5ENDJKNVhnUC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hcGkvVXNlckxvY2F0aW9uSW50ZXJmYWNlLnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL1VzZXJDb250cm9scy5zdmVsdGUiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvVXNlck1hcC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHcmFwaCwgVmVydGV4IH0gZnJvbSBcIi4uL21hcHBpbmcvR3JhcGhzXCJcbmNvbnN0IGJhc2VMb2NhdGlvblVybCA9IFwiL2FwaS92MS9nYW1lL3VzZXIvbG9jYXRpb25cIlxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlTG9jYXRpb24oeTogbnVtYmVyLCB4OiBudW1iZXIpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIGNvbnN0IGJvZHkgPSB7IHk6IHksIHg6IHggfVxuXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBmZXRjaChgJHtiYXNlTG9jYXRpb25Vcmx9YCwge1xuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgfSxcbiAgfSlcbiAgcmV0dXJuIGRhdGFcbn1cbiIsIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCBMIGZyb20gJ2xlYWZsZXQnO1xuXHRpbXBvcnQgJ2xlYWZsZXQvZGlzdC9sZWFmbGV0LmNzcyc7XG5cdGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgKiBhcyBVc2VyTG9jYXRpb25JbnRlcmZhY2UgZnJvbSAnJGxpYi9hcGkvVXNlckxvY2F0aW9uSW50ZXJmYWNlJztcblx0aW1wb3J0IHsgcGFyc2VBcmVhSlNPTkxpc3QgfSBmcm9tICckbGliL2pzb24vUGFyc2VyJztcblx0aW1wb3J0IHsgUmVzb3VyY2VBcmVhIH0gZnJvbSAnJGxpYi9nYW1lL1Jlc291cmNlQXJlYSc7XG5cdGltcG9ydCBNYXAgZnJvbSAnLi9NYXAuc3ZlbHRlJztcblx0ZXhwb3J0IHZhciBtYXA6IEwuTWFwIHwgdW5kZWZpbmVkO1xuXG5cdG9uTW91bnQoKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdzdGFydGluZyBtYXAgb25jbGljayBldmVudHMgZm9yOicpO1xuXHRcdGNvbnNvbGUubG9nKG1hcCk7XG5cdFx0bWFwPy5vbignY2xpY2snLCAoZXZlbnQpID0+IHVwZGF0ZUxvY2F0aW9uKGV2ZW50KSk7XG5cdH0pO1xuXG5cdHZhciByZXNvdXJjZUFyZWFzOiBSZXNvdXJjZUFyZWFbXSA9IFtdO1xuXHRhc3luYyBmdW5jdGlvbiB1cGRhdGVMb2NhdGlvbihldmVudDogTC5MZWFmbGV0TW91c2VFdmVudCkge1xuXHRcdGNvbnNvbGUubG9nKCdjbGlja2VkJyk7XG5cblx0XHRyZXNvdXJjZUFyZWFzLmZvckVhY2goKGFyZWEpID0+IGFyZWEuY2xlYXIoKSk7XG5cdFx0cmVzb3VyY2VBcmVhcyA9IFtdO1xuXHRcdHZhciBkYXRhOiBhbnlbXSA9IGF3YWl0IChcblx0XHRcdGF3YWl0IFVzZXJMb2NhdGlvbkludGVyZmFjZS51cGRhdGVMb2NhdGlvbihldmVudC5sYXRsbmcubGF0LCBldmVudC5sYXRsbmcubG5nKVxuXHRcdCkuanNvbigpO1xuXHRcdHZhciBhcmVhcyA9IHBhcnNlQXJlYUpTT05MaXN0KGRhdGEpO1xuXHRcdGFyZWFzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcblx0XHRcdHJlc291cmNlQXJlYXMucHVzaChuZXcgUmVzb3VyY2VBcmVhKGVsZW1lbnQpKTtcblx0XHR9KTtcblx0XHRyZXNvdXJjZUFyZWFzLmZvckVhY2goKGFyZWEpID0+IGFyZWEucmVuZGVyVG8obWFwISkpO1xuXHR9XG48L3NjcmlwdD5cblxuPGRpdiBpZD1cImNvbnRyb2xzXCIgY2xhc3M9XCJjb250cm9sc0RpdlwiPlxuXHQ8ZGl2IGNsYXNzPVwidy00LzEyXCI+XG5cdFx0PGRpdiBjbGFzcz1cInctZnVsbFwiPlxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0bi1wcmltYXJ5XCI+IFRoaXMgYmUgYnV0dG9uIDwvYnV0dG9uPlxuXHRcdDwvZGl2PlxuXHQ8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0LmNvbnRyb2xzRGl2IHtcblx0XHRAYXBwbHkgYWJzb2x1dGUgc2l6ZS1mdWxsIHRvcC0wIGxlZnQtMCB6LTEwIGZsZXgganVzdGlmeS1jZW50ZXIgZmxleC1yb3cgaXRlbXMtZW5kIHBvaW50ZXItZXZlbnRzLW5vbmU7XG5cdH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0IHNldHVwIGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBvbk1vdW50LCBvbkRlc3Ryb3ksIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgdGljayB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCBMIGZyb20gJ2xlYWZsZXQnO1xuXHRpbXBvcnQgJ2xlYWZsZXQvZGlzdC9sZWFmbGV0LmNzcyc7XG5cdGltcG9ydCBVc2VyQ29udHJvbHMgZnJvbSAnLi9Vc2VyQ29udHJvbHMuc3ZlbHRlJztcblxuXHRleHBvcnQgbGV0IHZpZXc6IEwuTGF0TG5nRXhwcmVzc2lvbiA9IFs1Ni4wNDY3MywgMTIuNjk0MzddO1xuXHRleHBvcnQgbGV0IHpvb206IG51bWJlciA9IDE0O1xuXG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cblx0bGV0IG1hcDogTC5NYXAgfCB1bmRlZmluZWQ7XG5cblx0bGV0IG1hcEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuXHRvbk1vdW50KCgpID0+IHtcblx0XHRtYXAgPSBMLm1hcChtYXBFbGVtZW50LCB7IHpvb21Db250cm9sOiBmYWxzZSB9KVxuXHRcdFx0Ly8gZXhhbXBsZSB0byBleHBvc2UgbWFwIGV2ZW50cyB0byBwYXJlbnQgY29tcG9uZW50czpcblx0XHRcdC5vbignem9vbScsIChlKSA9PiBkaXNwYXRjaCgnem9vbScsIGUpKVxuXHRcdFx0Lm9uKCdwb3B1cG9wZW4nLCBhc3luYyAoZSkgPT4ge1xuXHRcdFx0XHRhd2FpdCB0aWNrKCk7XG5cdFx0XHRcdGUucG9wdXAudXBkYXRlKCk7XG5cdFx0XHR9KTtcblxuXHRcdEwudGlsZUxheWVyKCdodHRwczovL3tzfS5iYXNlbWFwcy5jYXJ0b2Nkbi5jb20vcmFzdGVydGlsZXMvdm95YWdlci97en0ve3h9L3t5fXtyfS5wbmcnLCB7XG5cdFx0XHRhdHRyaWJ1dGlvbjogYCZjb3B5OzxhIGhyZWY9XCJodHRwczovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9jb3B5cmlnaHRcIiB0YXJnZXQ9XCJfYmxhbmtcIj5PcGVuU3RyZWV0TWFwPC9hPiwmY29weTs8YSBocmVmPVwiaHR0cHM6Ly9jYXJ0by5jb20vYXR0cmlidXRpb25zXCIgdGFyZ2V0PVwiX2JsYW5rXCI+Q0FSVE88L2E+YFxuXHRcdH0pLmFkZFRvKG1hcCk7XG5cdFx0TC5jb250cm9sXG5cdFx0XHQuem9vbSh7XG5cdFx0XHRcdHBvc2l0aW9uOiAndG9wcmlnaHQnXG5cdFx0XHR9KVxuXHRcdFx0LmFkZFRvKG1hcCk7XG5cdH0pO1xuXG5cdG9uRGVzdHJveSgoKSA9PiB7XG5cdFx0bWFwPy5yZW1vdmUoKTtcblx0XHRtYXAgPSB1bmRlZmluZWQ7XG5cdH0pO1xuXHQkOiBpZiAobWFwKSB7XG5cdFx0bWFwLnNldFZpZXcodmlldywgem9vbSk7XG5cdFx0bWFwTG9hZGVkID0gdHJ1ZTtcblx0fVxuXHR2YXIgbWFwTG9hZGVkID0gZmFsc2U7XG48L3NjcmlwdD5cblxuPGRpdiBpZD1cIm1hcC1jb250YWluZXJcIiBjbGFzcz1cInJlbGF0aXZlIHNpemUtZnVsbFwiPlxuXHR7I2lmIG1hcExvYWRlZH1cblx0XHQ8VXNlckNvbnRyb2xzIGJpbmQ6bWFwPjwvVXNlckNvbnRyb2xzPlxuXHR7L2lmfVxuXHQ8ZGl2IGlkPVwibWFwXCIgYmluZDp0aGlzPXttYXBFbGVtZW50fSBjbGFzcz1cImFic29sdXRlIGxlZnQtMCB0b3AtMCBzaXplLWZ1bGwgei0wXCI+PC9kaXY+XG48L2Rpdj5cbiJdLCJuYW1lcyI6WyJiYXNlTG9jYXRpb25VcmwiLCJ1cGRhdGVMb2NhdGlvbiIsInkiLCJ4IiwiYm9keSIsImluc2VydF9oeWRyYXRpb24iLCJ0YXJnZXQiLCJkaXYyIiwiYW5jaG9yIiwibWFwIiwiJCRwcm9wcyIsIm9uTW91bnQiLCJldmVudCIsInJlc291cmNlQXJlYXMiLCJhcmVhIiwiZGF0YSIsIlVzZXJMb2NhdGlvbkludGVyZmFjZS51cGRhdGVMb2NhdGlvbiIsImFyZWFzIiwicGFyc2VBcmVhSlNPTkxpc3QiLCJlbGVtZW50IiwiUmVzb3VyY2VBcmVhIiwiY3R4IiwiY3JlYXRlX2lmX2Jsb2NrIiwiZGl2MSIsImFwcGVuZF9oeWRyYXRpb24iLCJkaXYwIiwidmlldyIsInpvb20iLCJkaXNwYXRjaCIsImNyZWF0ZUV2ZW50RGlzcGF0Y2hlciIsIm1hcEVsZW1lbnQiLCIkJGludmFsaWRhdGUiLCJMIiwiZSIsInRpY2siLCJvbkRlc3Ryb3kiLCJtYXBMb2FkZWQiLCIkJHZhbHVlIl0sIm1hcHBpbmdzIjoia2FBQ0EsTUFBTUEsRUFBa0IsNkJBRUYsZUFBQUMsRUFBZUMsRUFBV0MsRUFBOEIsQ0FDdEUsTUFBQUMsRUFBTyxDQUFFLEVBQUFGLEVBQU0sRUFBQUMsR0FTZCxPQVBNLE1BQU0sTUFBTSxHQUFHSCxDQUFlLEdBQUksQ0FDN0MsS0FBTSxLQUFLLFVBQVVJLENBQUksRUFDekIsT0FBUSxPQUNSLFFBQVMsQ0FDUCxlQUFnQixrQkFDbEIsQ0FBQSxDQUNELENBRUgsbVdDbUJBQyxFQU1LQyxFQUFBQyxFQUFBQyxDQUFBLGdEQS9CTyxHQUFBLENBQUEsSUFBQUMsQ0FBQSxFQUFBQyxFQUVYQyxFQUFBLElBQUEsQ0FDQyxRQUFRLElBQUksa0NBQWtDLEVBQzlDLFFBQVEsSUFBSUYsQ0FBRyxFQUNmQSxHQUFBLE1BQUFBLEVBQUssR0FBRyxRQUFVRyxHQUFVWCxFQUFlVyxDQUFLLEtBRzdDLElBQUFDLEVBQUEsQ0FBQSxpQkFDV1osRUFBZVcsRUFBQSxDQUM3QixRQUFRLElBQUksU0FBUyxFQUVyQkMsRUFBYyxRQUFTQyxHQUFTQSxFQUFLLE1BQUEsQ0FBQSxFQUNyQ0QsRUFBQSxDQUFBLE1BQ0lFLEVBQ0csTUFBQSxNQUFBQyxFQUFxQ0osRUFBTSxPQUFPLElBQUtBLEVBQU0sT0FBTyxHQUFHLEdBQzVFLEtBQUEsRUFDRUssRUFBUUMsRUFBa0JILENBQUksRUFDbENFLEVBQU0sUUFBU0UsR0FBQSxDQUNkTixFQUFjLEtBQUEsSUFBU08sRUFBYUQsQ0FBTyxDQUFBLElBRTVDTixFQUFjLFFBQVNDLEdBQVNBLEVBQUssU0FBU0wsQ0FBSSxDQUFBLCtlQ2dCOUNZLEVBQVMsQ0FBQSxHQUFBQyxFQUFBRCxDQUFBLDJVQURmaEIsRUFLS0MsRUFBQWlCLEVBQUFmLENBQUEsd0JBREpnQixFQUFzRkQsRUFBQUUsQ0FBQSx5QkFIakZKLEVBQVMsQ0FBQSx3TEF2Q0gsR0FBQSxDQUFBLEtBQUFLLEVBQUEsQ0FBNEIsU0FBVSxRQUFRLENBQUEsRUFBQWhCLEdBQzlDLEtBQUFpQixFQUFlLEVBQUEsRUFBQWpCLFFBRXBCa0IsRUFBV0MsSUFFYixJQUFBcEIsRUFFQXFCLEVBQ0puQixFQUFBLElBQUEsQ0FDQ29CLEVBQUEsRUFBQXRCLEVBQU11QixFQUFFLElBQUlGLEVBQWMsQ0FBQSxZQUFhLEdBRXJDLEVBQUEsR0FBRyxPQUFTRyxHQUFNTCxFQUFTLE9BQVFLLENBQUMsQ0FBQSxFQUNwQyxHQUFHLFlBQW9CLE1BQUFBLEdBQUEsQ0FDakIsTUFBQUMsRUFBQSxFQUNORCxFQUFFLE1BQU0sWUFHVkQsRUFBRSxVQUFVLDJFQUFBLENBQ1gsWUFBQSxvS0FDRSxDQUFBLEVBQUEsTUFBTXZCLENBQUcsRUFDWnVCLEVBQUUsUUFDQSxLQUFBLENBQ0EsU0FBVSxXQUFBLEVBRVYsTUFBTXZCLENBQUcsSUFHWjBCLEVBQUEsSUFBQSxDQUNDMUIsR0FBQSxNQUFBQSxFQUFLLGFBQ0xBLEVBQU0sTUFBQSxRQU1IMkIsRUFBWSxxRUFPU04sRUFBVU8sbUhBWDVCNUIsSUFDTkEsRUFBSSxRQUFRaUIsRUFBTUMsQ0FBSSxNQUN0QlMsRUFBWSxFQUFBIn0=
